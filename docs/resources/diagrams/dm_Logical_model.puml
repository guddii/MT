@startuml
top to bottom direction
hide empty members
skinparam nodesep 50
skinparam ranksep 25

mainframe **dm** Logical Data Model

entity  "foaf:PersonalProfileDocument" as WebID_Client << (D,orange) Dataset >> {
}
note top: The profile of the any client agent
entity "claim:Verification" as Verification << (T,orchid) Thing >> #line.bold  {
    claim:verificationCode
}
entity "foaf:PersonalProfileDocument" as WebID_DPC << (D,orange) Dataset >> {
    id
}
note right: The profile of the DPC agent
entity "interop:Agent" as SocialAgent << (T,orchid) Thing >> {
    interop:hasRegistrySet
}
entity "RegistrySet" as RegistrySet << (D,orange) Dataset >> {
    **ab674650**
}
note left: Hash values must be unique, e.g. the\na SHAKE256 encoded storage URL.
entity "interop:DataRegistry" as DataRegistry << (T,orchid) Thing >> {
    interop:hasDataRegistration
}
entity "claim:Registry" as ClaimRegistry << (T,orchid) Thing >> #line.bold {
    claim:trustee
    claim:monitoredStorage
    claim:verificationResource
    claim:verificationCode
    claim:claimedData
}
entity "ldp:Container" as Container1 << (D,orange) Dataset >> {
    ldp:contains
}
note top: Root of all claimed data.
entity "interop:DataRegistration" as DataRegistration << (D,orange) Dataset >> {
    interop:registeredShapeTree
}
entity "ldp:Container" as Container2 << (D,orange) Dataset >> {
    ldp:contains
}
note left: Resource container\nfor all access logs.
entity "AccessLog" as AccessLog << (D,orange) Dataset >>{
    ...
}
entity "ShapeTree" as ShapeTree << (D,orange) Dataset >> {
    AccessLogRegistrationTree
    AccessLogTree
}
entity "st:ShapeTree" as AccessLogRegistrationTree << (S,yellow) >> {
    st:contains
}
entity "st:ShapeTree" as AccessLogTree << (S,yellow) >> {
    st:shape
}
entity "AccessLogShape" as AccessLogShape << (S,yellow) ShEx >> {
    ...
}

WebID_Client                            |o--o|  Verification : > owns
WebID_DPC::id                           |o--o|  SocialAgent
SocialAgent::hasRegistrySet             |o--o|  RegistrySet
RegistrySet::ab674650                   }|--o|  DataRegistry
DataRegistry::hasDataRegistration       }|--o|  Container2
DataRegistry::hasDataRegistration       ||--|{  DataRegistration
RegistrySet::ab674650                   }|--o|  ClaimRegistry
ClaimRegistry::claimedData              |o--o|  Container1
Container1::contains                    |o--|{  DataRegistration
Container1::contains                    |o--|{  Container2
Container2::contains                    |o--|{  AccessLog
DataRegistration::registeredShapeTree   |o--o|  AccessLogRegistrationTree
AccessLogRegistrationTree::cotains      |o--o|  AccessLogTree
ShapeTree::AccessLogRegistrationTree    |o--o|  AccessLogRegistrationTree
ShapeTree::AccessLogTree                |o--o|  AccessLogTree
ClaimRegistry::verificationResource     |o--o|  Verification
AccessLogTree::shape                    |o--o|  AccessLogShape

note "The shape will be satifsied" as N2
AccessLogShape .. N2
N2 .. AccessLog
@enduml